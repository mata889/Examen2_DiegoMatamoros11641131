
import java.util.ArrayList;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;
import javax.swing.tree.MutableTreeNode;

public class Main extends javax.swing.JFrame {

    public Main() {
        au.cargarArchivo();
        aa.cargarArchivo();
        initComponents();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jd_CrearUsuario = new javax.swing.JDialog();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        crear_usuario = new javax.swing.JTextField();
        crear_nombre = new javax.swing.JTextField();
        crear_edad = new javax.swing.JTextField();
        crear_contraseña = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jd_ModificarUsuario = new javax.swing.JDialog();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        crear_usuario1 = new javax.swing.JTextField();
        crear_nombre1 = new javax.swing.JTextField();
        crear_edad1 = new javax.swing.JTextField();
        crear_contraseña1 = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jLabel22 = new javax.swing.JLabel();
        jd_login = new javax.swing.JDialog();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        explorar_comboAlbum = new javax.swing.JComboBox<>();
        jLabel24 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        explorar_tablaCancion = new javax.swing.JTable();
        jLabel25 = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();
        Explorar_playlist = new javax.swing.JComboBox<>();
        jPanel2 = new javax.swing.JPanel();
        jLabel23 = new javax.swing.JLabel();
        crearPlaylist_nombre = new javax.swing.JTextField();
        jButton4 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        VerPlayList_Tree = new javax.swing.JTree();
        jLabel26 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane7 = new javax.swing.JScrollPane();
        explorar_tablaCancion1 = new javax.swing.JTable();
        jLabel27 = new javax.swing.JLabel();
        Favoritos_comboBox = new javax.swing.JComboBox<>();
        fav_combbox = new javax.swing.JComboBox<>();
        jLabel28 = new javax.swing.JLabel();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jLabel29 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        minuto = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        segundos = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jPanel5 = new javax.swing.JPanel();
        popup_playlist = new javax.swing.JPopupMenu();
        Eliminar = new javax.swing.JMenuItem();
        panel = new javax.swing.JTabbedPane();
        panel_login = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        tf_usuario = new javax.swing.JTextField();
        tf_contraseña = new javax.swing.JTextField();
        bt_entrarLogin = new javax.swing.JButton();
        panel_guardarUsuario = new javax.swing.JPanel();
        bt_crearUsuario = new javax.swing.JButton();
        panel_cargarUsuarios = new javax.swing.JPanel();
        bt_cargarUsuarios = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabla_cargarUsuarios = new javax.swing.JTable();
        panel_canciones = new javax.swing.JPanel();
        canciones_comboBox = new javax.swing.JComboBox<>();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        cancion_nombre = new javax.swing.JTextField();
        cancion_artista = new javax.swing.JTextField();
        cancion_genero = new javax.swing.JTextField();
        cancion_duracion = new javax.swing.JSpinner();
        cancion_boton = new javax.swing.JButton();
        panel_albums = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        album_nombre = new javax.swing.JTextField();
        album_artista = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabla_album = new javax.swing.JTable();
        jLabel11 = new javax.swing.JLabel();
        album_comboBox = new javax.swing.JComboBox<>();
        jScrollPane3 = new javax.swing.JScrollPane();
        tabla_albumCanciones = new javax.swing.JTable();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        album_eliminarAlbum = new javax.swing.JButton();
        panel_usuarios = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tabla_Usuarios = new javax.swing.JTable();
        bt_eliminar = new javax.swing.JButton();
        bt_modificar = new javax.swing.JButton();

        jLabel4.setFont(new java.awt.Font("Tahoma", 3, 18)); // NOI18N
        jLabel4.setText("Crear Usuario");

        jLabel5.setText("Usuario");

        jLabel6.setText("Nombre");

        jLabel7.setText("edad");

        jLabel8.setText("Contraseña:");

        jButton1.setText("CrearUsuario");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jd_CrearUsuarioLayout = new javax.swing.GroupLayout(jd_CrearUsuario.getContentPane());
        jd_CrearUsuario.getContentPane().setLayout(jd_CrearUsuarioLayout);
        jd_CrearUsuarioLayout.setHorizontalGroup(
            jd_CrearUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jd_CrearUsuarioLayout.createSequentialGroup()
                .addGroup(jd_CrearUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jd_CrearUsuarioLayout.createSequentialGroup()
                        .addGap(174, 174, 174)
                        .addComponent(jLabel4))
                    .addGroup(jd_CrearUsuarioLayout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addGroup(jd_CrearUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8))
                        .addGap(55, 55, 55)
                        .addGroup(jd_CrearUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(crear_usuario)
                            .addComponent(crear_nombre)
                            .addComponent(crear_edad)
                            .addComponent(crear_contraseña, javax.swing.GroupLayout.DEFAULT_SIZE, 134, Short.MAX_VALUE))))
                .addContainerGap(137, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jd_CrearUsuarioLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(63, 63, 63))
        );
        jd_CrearUsuarioLayout.setVerticalGroup(
            jd_CrearUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jd_CrearUsuarioLayout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addComponent(jLabel4)
                .addGap(43, 43, 43)
                .addGroup(jd_CrearUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(crear_usuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(jd_CrearUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(crear_nombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(jd_CrearUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(crear_edad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(jd_CrearUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(crear_contraseña, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 44, Short.MAX_VALUE)
                .addContainerGap())
        );

        jLabel18.setText("Usuario");

        jLabel19.setText("Nombre");

        jLabel20.setText("edad");

        jLabel21.setText("Contraseña:");

        jButton3.setText("ModificarUsuario");
        jButton3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton3MouseClicked(evt);
            }
        });

        jLabel22.setFont(new java.awt.Font("Tahoma", 3, 18)); // NOI18N
        jLabel22.setText("Modificar Usuario");

        javax.swing.GroupLayout jd_ModificarUsuarioLayout = new javax.swing.GroupLayout(jd_ModificarUsuario.getContentPane());
        jd_ModificarUsuario.getContentPane().setLayout(jd_ModificarUsuarioLayout);
        jd_ModificarUsuarioLayout.setHorizontalGroup(
            jd_ModificarUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jd_ModificarUsuarioLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(63, 63, 63))
            .addGroup(jd_ModificarUsuarioLayout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addGroup(jd_ModificarUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel22)
                    .addGroup(jd_ModificarUsuarioLayout.createSequentialGroup()
                        .addGroup(jd_ModificarUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel18)
                            .addComponent(jLabel19)
                            .addComponent(jLabel20)
                            .addComponent(jLabel21))
                        .addGap(55, 55, 55)
                        .addGroup(jd_ModificarUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(crear_usuario1)
                            .addComponent(crear_nombre1)
                            .addComponent(crear_edad1)
                            .addComponent(crear_contraseña1, javax.swing.GroupLayout.DEFAULT_SIZE, 134, Short.MAX_VALUE))))
                .addContainerGap(133, Short.MAX_VALUE))
        );
        jd_ModificarUsuarioLayout.setVerticalGroup(
            jd_ModificarUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jd_ModificarUsuarioLayout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addComponent(jLabel22)
                .addGap(40, 40, 40)
                .addGroup(jd_ModificarUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(crear_usuario1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(jd_ModificarUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(crear_nombre1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(jd_ModificarUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(crear_edad1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(jd_ModificarUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel21)
                    .addComponent(crear_contraseña1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabbedPane1MouseClicked(evt);
            }
        });

        explorar_comboAlbum.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                explorar_comboAlbumItemStateChanged(evt);
            }
        });

        jLabel24.setText("Albumes");

        explorar_tablaCancion.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre", "Artista"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane5.setViewportView(explorar_tablaCancion);
        if (explorar_tablaCancion.getColumnModel().getColumnCount() > 0) {
            explorar_tablaCancion.getColumnModel().getColumn(0).setResizable(false);
            explorar_tablaCancion.getColumnModel().getColumn(1).setResizable(false);
        }

        jLabel25.setText("Cancion");

        jButton5.setText("Agregar A Playlist");
        jButton5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton5MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(102, 102, 102)
                        .addComponent(jLabel24))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(explorar_comboAlbum, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(113, 113, 113)
                        .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 91, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Explorar_playlist, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(158, 158, 158))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel24)
                .addGap(31, 31, 31)
                .addComponent(explorar_comboAlbum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addComponent(jLabel25))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(Explorar_playlist, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(28, 28, 28)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(57, 57, 57)
                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(43, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Explorar", jPanel1);

        jLabel23.setFont(new java.awt.Font("Tahoma", 3, 18)); // NOI18N
        jLabel23.setText("Crear Playlist");

        jButton4.setText("Crear Playlist");
        jButton4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton4MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addComponent(jLabel23)
                .addGap(33, 33, 33)
                .addComponent(crearPlaylist_nombre, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(322, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(136, 136, 136))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(81, 81, 81)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel23)
                    .addComponent(crearPlaylist_nombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(77, 77, 77)
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(197, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Crear Playlists", jPanel2);

        javax.swing.tree.DefaultMutableTreeNode treeNode1 = new javax.swing.tree.DefaultMutableTreeNode("root");
        VerPlayList_Tree.setModel(new javax.swing.tree.DefaultTreeModel(treeNode1));
        VerPlayList_Tree.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                VerPlayList_TreeMouseClicked(evt);
            }
        });
        jScrollPane6.setViewportView(VerPlayList_Tree);

        jLabel26.setText("Ver Playlist");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(136, 136, 136)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(78, 78, 78)
                        .addComponent(jLabel26)))
                .addContainerGap(282, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel26)
                .addGap(44, 44, 44)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(62, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Ver Playlists", jPanel3);

        explorar_tablaCancion1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre", "Artista"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane7.setViewportView(explorar_tablaCancion1);
        if (explorar_tablaCancion1.getColumnModel().getColumnCount() > 0) {
            explorar_tablaCancion1.getColumnModel().getColumn(0).setResizable(false);
            explorar_tablaCancion1.getColumnModel().getColumn(1).setResizable(false);
        }

        jLabel27.setText("Cancion");

        Favoritos_comboBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                Favoritos_comboBoxItemStateChanged(evt);
            }
        });

        jLabel28.setText("Favoritos");

        jButton6.setText("Pasar a Favoritos");
        jButton6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton6MouseClicked(evt);
            }
        });

        jButton7.setText("Reproducir");
        jButton7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton7MouseClicked(evt);
            }
        });

        jLabel29.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        jLabel29.setText("00");

        jLabel30.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        jLabel30.setText(":");

        minuto.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        minuto.setText("00");

        jLabel32.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        jLabel32.setText(":");

        segundos.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        segundos.setText("00");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton6)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(Favoritos_comboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel4Layout.createSequentialGroup()
                        .addGap(102, 102, 102)
                        .addComponent(jLabel27, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 244, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel28)
                        .addGap(166, 166, 166))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButton7)
                            .addComponent(fav_combbox, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(95, 95, 95))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel29)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel30, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(minuto)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel32, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(segundos)
                .addGap(82, 82, 82))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(Favoritos_comboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel28))
                .addGap(63, 63, 63)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel27)
                    .addComponent(fav_combbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(74, 74, 74)
                        .addComponent(jButton6))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addComponent(jButton7)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 64, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel29)
                    .addComponent(jLabel30)
                    .addComponent(minuto)
                    .addComponent(jLabel32)
                    .addComponent(segundos))
                .addGap(81, 81, 81))
        );

        jTabbedPane1.addTab("Ver Favoritos", jPanel4);

        jMenu1.setText("Usuario");

        jMenuItem1.setText("Salir");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        jd_login.setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout jd_loginLayout = new javax.swing.GroupLayout(jd_login.getContentPane());
        jd_login.getContentPane().setLayout(jd_loginLayout);
        jd_loginLayout.setHorizontalGroup(
            jd_loginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        jd_loginLayout.setVerticalGroup(
            jd_loginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        Eliminar.setText("Eliminar");
        Eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EliminarActionPerformed(evt);
            }
        });
        popup_playlist.add(Eliminar);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        panel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                panelMouseClicked(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 3, 18)); // NOI18N
        jLabel1.setText("Log In");

        jLabel2.setFont(new java.awt.Font("Tahoma", 3, 18)); // NOI18N
        jLabel2.setText("Usuario:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 3, 18)); // NOI18N
        jLabel3.setText("Password:");

        bt_entrarLogin.setText("Entrar");
        bt_entrarLogin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bt_entrarLoginMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout panel_loginLayout = new javax.swing.GroupLayout(panel_login);
        panel_login.setLayout(panel_loginLayout);
        panel_loginLayout.setHorizontalGroup(
            panel_loginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_loginLayout.createSequentialGroup()
                .addGroup(panel_loginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel_loginLayout.createSequentialGroup()
                        .addGap(229, 229, 229)
                        .addComponent(jLabel1))
                    .addGroup(panel_loginLayout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addGroup(panel_loginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addGap(57, 57, 57)
                        .addGroup(panel_loginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(tf_usuario)
                            .addComponent(tf_contraseña, javax.swing.GroupLayout.DEFAULT_SIZE, 157, Short.MAX_VALUE))
                        .addGap(51, 51, 51)
                        .addComponent(bt_entrarLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(212, Short.MAX_VALUE))
        );
        panel_loginLayout.setVerticalGroup(
            panel_loginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_loginLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jLabel1)
                .addGap(76, 76, 76)
                .addGroup(panel_loginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(tf_usuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(72, 72, 72)
                .addGroup(panel_loginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(tf_contraseña, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bt_entrarLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(104, Short.MAX_VALUE))
        );

        panel.addTab("Login", panel_login);

        bt_crearUsuario.setText("Guardar Usuario");
        bt_crearUsuario.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bt_crearUsuarioMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout panel_guardarUsuarioLayout = new javax.swing.GroupLayout(panel_guardarUsuario);
        panel_guardarUsuario.setLayout(panel_guardarUsuarioLayout);
        panel_guardarUsuarioLayout.setHorizontalGroup(
            panel_guardarUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_guardarUsuarioLayout.createSequentialGroup()
                .addGap(203, 203, 203)
                .addComponent(bt_crearUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(337, Short.MAX_VALUE))
        );
        panel_guardarUsuarioLayout.setVerticalGroup(
            panel_guardarUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_guardarUsuarioLayout.createSequentialGroup()
                .addGap(96, 96, 96)
                .addComponent(bt_crearUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(149, Short.MAX_VALUE))
        );

        panel.addTab("Guardar Usuarios", panel_guardarUsuario);

        bt_cargarUsuarios.setText("Cargar usuarios");
        bt_cargarUsuarios.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bt_cargarUsuariosMouseClicked(evt);
            }
        });

        tabla_cargarUsuarios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "UserName", "Nombre"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tabla_cargarUsuarios);
        if (tabla_cargarUsuarios.getColumnModel().getColumnCount() > 0) {
            tabla_cargarUsuarios.getColumnModel().getColumn(0).setResizable(false);
            tabla_cargarUsuarios.getColumnModel().getColumn(1).setResizable(false);
        }

        javax.swing.GroupLayout panel_cargarUsuariosLayout = new javax.swing.GroupLayout(panel_cargarUsuarios);
        panel_cargarUsuarios.setLayout(panel_cargarUsuariosLayout);
        panel_cargarUsuariosLayout.setHorizontalGroup(
            panel_cargarUsuariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_cargarUsuariosLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(bt_cargarUsuarios, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(47, 47, 47))
        );
        panel_cargarUsuariosLayout.setVerticalGroup(
            panel_cargarUsuariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_cargarUsuariosLayout.createSequentialGroup()
                .addGroup(panel_cargarUsuariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel_cargarUsuariosLayout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panel_cargarUsuariosLayout.createSequentialGroup()
                        .addGap(91, 91, 91)
                        .addComponent(bt_cargarUsuarios, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(87, Short.MAX_VALUE))
        );

        panel.addTab("Cargar Usuarios", panel_cargarUsuarios);

        jLabel14.setText("Nombre:");

        jLabel15.setText("Artista:");

        jLabel16.setText("Duracion:");

        jLabel17.setText("Genero:");

        cancion_duracion.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));

        cancion_boton.setText("Añadir A Album");
        cancion_boton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cancion_botonMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout panel_cancionesLayout = new javax.swing.GroupLayout(panel_canciones);
        panel_canciones.setLayout(panel_cancionesLayout);
        panel_cancionesLayout.setHorizontalGroup(
            panel_cancionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_cancionesLayout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addGroup(panel_cancionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel_cancionesLayout.createSequentialGroup()
                        .addGroup(panel_cancionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(canciones_comboBox, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(panel_cancionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(panel_cancionesLayout.createSequentialGroup()
                                    .addComponent(jLabel15)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(cancion_artista))
                                .addGroup(panel_cancionesLayout.createSequentialGroup()
                                    .addComponent(jLabel14)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(cancion_nombre, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(210, 210, 210)
                        .addComponent(jLabel17)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_cancionesLayout.createSequentialGroup()
                        .addComponent(jLabel16)
                        .addGap(18, 18, 18)
                        .addComponent(cancion_duracion, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(305, 305, 305)))
                .addGroup(panel_cancionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cancion_genero, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cancion_boton))
                .addGap(119, 119, 119))
        );
        panel_cancionesLayout.setVerticalGroup(
            panel_cancionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_cancionesLayout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(canciones_comboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41)
                .addGroup(panel_cancionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(jLabel17)
                    .addComponent(cancion_nombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cancion_genero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addGroup(panel_cancionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(cancion_artista, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(46, 46, 46)
                .addGroup(panel_cancionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(cancion_duracion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cancion_boton, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(89, Short.MAX_VALUE))
        );

        panel.addTab("Canciones", panel_canciones);

        panel_albums.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel9.setText("Nombre:");
        panel_albums.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(37, 44, -1, -1));

        jLabel10.setText("Artista");
        panel_albums.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(37, 93, 41, -1));
        panel_albums.add(album_nombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(96, 41, 104, -1));
        panel_albums.add(album_artista, new org.netbeans.lib.awtextra.AbsoluteConstraints(96, 90, 104, -1));

        jButton2.setText("Añadir Album");
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton2MouseClicked(evt);
            }
        });
        panel_albums.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(37, 138, -1, -1));

        tabla_album.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre", "Artista"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tabla_album);
        if (tabla_album.getColumnModel().getColumnCount() > 0) {
            tabla_album.getColumnModel().getColumn(0).setResizable(false);
            tabla_album.getColumnModel().getColumn(1).setResizable(false);
        }

        panel_albums.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 241, 190, 110));

        jLabel11.setText("Albumes");
        panel_albums.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(73, 200, -1, -1));

        album_comboBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                album_comboBoxItemStateChanged(evt);
            }
        });
        panel_albums.add(album_comboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 40, 115, -1));

        tabla_albumCanciones.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Canciones"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(tabla_albumCanciones);
        if (tabla_albumCanciones.getColumnModel().getColumnCount() > 0) {
            tabla_albumCanciones.getColumnModel().getColumn(0).setResizable(false);
        }

        panel_albums.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 80, 277, 179));

        jLabel12.setText("Selecionar Album");
        panel_albums.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 10, -1, -1));

        jLabel13.setText("Album Canciones");
        panel_albums.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 30, -1, -1));

        album_eliminarAlbum.setText("Eliminar Album");
        album_eliminarAlbum.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                album_eliminarAlbumMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                album_eliminarAlbumMouseEntered(evt);
            }
        });
        panel_albums.add(album_eliminarAlbum, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 100, -1, -1));

        panel.addTab("Albums", panel_albums);

        tabla_Usuarios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "UserName", "Name"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(tabla_Usuarios);
        if (tabla_Usuarios.getColumnModel().getColumnCount() > 0) {
            tabla_Usuarios.getColumnModel().getColumn(0).setResizable(false);
            tabla_Usuarios.getColumnModel().getColumn(1).setResizable(false);
        }

        bt_eliminar.setText("Eliminar");
        bt_eliminar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bt_eliminarMouseClicked(evt);
            }
        });

        bt_modificar.setText("Modificar");
        bt_modificar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bt_modificarMouseClicked(evt);
            }
        });
        bt_modificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_modificarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panel_usuariosLayout = new javax.swing.GroupLayout(panel_usuarios);
        panel_usuarios.setLayout(panel_usuariosLayout);
        panel_usuariosLayout.setHorizontalGroup(
            panel_usuariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_usuariosLayout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(60, 60, 60)
                .addGroup(panel_usuariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(bt_eliminar)
                    .addComponent(bt_modificar))
                .addContainerGap(102, Short.MAX_VALUE))
        );
        panel_usuariosLayout.setVerticalGroup(
            panel_usuariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_usuariosLayout.createSequentialGroup()
                .addContainerGap(86, Short.MAX_VALUE)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(71, 71, 71))
            .addGroup(panel_usuariosLayout.createSequentialGroup()
                .addGap(104, 104, 104)
                .addComponent(bt_eliminar)
                .addGap(60, 60, 60)
                .addComponent(bt_modificar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        panel.addTab("Usuarios", panel_usuarios);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void bt_crearUsuarioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bt_crearUsuarioMouseClicked
        jd_CrearUsuario.pack();
        jd_CrearUsuario.setModal(true);
        jd_CrearUsuario.setLocationRelativeTo(this);
        jd_CrearUsuario.setVisible(true);
    }//GEN-LAST:event_bt_crearUsuarioMouseClicked

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        //String nombre, String edad, String username, String password
        Usuario u = new Usuario(crear_usuario.getText(), crear_edad.getText(), crear_usuario.getText(), crear_contraseña.getText());
        au.setUsuario(u);
        au.escribirArchivo();
        JOptionPane.showMessageDialog(this, "Se ha guardado");
        crear_contraseña.setText("");
        crear_edad.setText("");
        crear_nombre.setText("");
        crear_usuario.setText("");
        jd_CrearUsuario.dispose();
    }//GEN-LAST:event_jButton1MouseClicked

    private void bt_entrarLoginMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bt_entrarLoginMouseClicked

        for (int i = 0; i < au.listausuarios.size(); i++) {
            if (au.listausuarios.get(i).getUsername().equals(tf_usuario.getText())) {
                if (au.listausuarios.get(i).getPassword().equals(tf_contraseña.getText())) {
                    //
                    DefaultComboBoxModel model = (DefaultComboBoxModel) explorar_comboAlbum.getModel();
                    for (int j = 0; j < aa.listaalbum.size(); j++) {
                        if (model.getIndexOf(aa.listaalbum.get(j).getNombre()) == -1) {
                            model.addElement(aa.listaalbum.get(j).getNombre());
                        }
                    }
                    DefaultComboBoxModel model2 = (DefaultComboBoxModel) Favoritos_comboBox.getModel();
                    for (int j = 0; j < aa.listaalbum.size(); j++) {
                        if (model2.getIndexOf(aa.listaalbum.get(j).getNombre()) == -1) {
                            model2.addElement(aa.listaalbum.get(j).getNombre());
                        }
                    }
                    //
                    JOptionPane.showMessageDialog(this, "Ha entrado " + au.listausuarios.get(i).getNombre());
                    jd_login.pack();
                    jd_login.setModal(true);
                    jd_login.setLocationRelativeTo(this);
                    jd_login.setVisible(true);

                }
            }
        }
    }//GEN-LAST:event_bt_entrarLoginMouseClicked

    private void bt_cargarUsuariosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bt_cargarUsuariosMouseClicked
        tabla_cargarUsuarios.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][]{},
                new String[]{
                    "UserName", "Nombre"
                }
        ) {
            boolean[] canEdit = new boolean[]{
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit[columnIndex];
            }
        });
        DefaultTableModel Modelc = (DefaultTableModel) tabla_cargarUsuarios.getModel();
        for (int i = 0; i < au.listausuarios.size(); i++) {
            Modelc.addRow(new Object[]{au.listausuarios.get(i).getUsername(), au.listausuarios.get(i).getUsername()});
        }
    }//GEN-LAST:event_bt_cargarUsuariosMouseClicked

    private void panelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panelMouseClicked
        if (aa.listaalbum.size() > 0) {
            cancion_boton.setEnabled(true);
        } else {
            cancion_boton.setEnabled(false);
        }
        //tableUsuarios
        tabla_Usuarios.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][]{},
                new String[]{
                    "UserName", "Name"
                }
        ) {
            boolean[] canEdit = new boolean[]{
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit[columnIndex];
            }
        });
        DefaultTableModel tablaUsuarios = (DefaultTableModel) tabla_Usuarios.getModel();
        for (int i = 0; i < au.listausuarios.size(); i++) {
            tablaUsuarios.addRow(new Object[]{au.listausuarios.get(i).getUsername(), au.listausuarios.get(i).getNombre()});
        }
        //tablaAlbumModelo
        tabla_album.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][]{},
                new String[]{
                    "Nombre", "Artista"
                }
        ) {
            boolean[] canEdit = new boolean[]{
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit[columnIndex];
            }
        });
        DefaultTableModel Albumodelo = (DefaultTableModel) tabla_album.getModel();
        for (int i = 0; i < aa.listaalbum.size(); i++) {
            Albumodelo.addRow(new Object[]{aa.listaalbum.get(i).getNombre(), aa.listaalbum.get(i).getArtista()});
        }
        //combobox
        DefaultComboBoxModel albumCombo = (DefaultComboBoxModel) album_comboBox.getModel();
        for (int i = 0; i < aa.listaalbum.size(); i++) {
            if (albumCombo.getIndexOf(aa.listaalbum.get(i).getNombre()) == -1) {
                albumCombo.addElement(aa.listaalbum.get(i).getNombre());
            }
        }
        DefaultComboBoxModel CanCombo = (DefaultComboBoxModel) canciones_comboBox.getModel();
        for (int i = 0; i < aa.listaalbum.size(); i++) {
            if (CanCombo.getIndexOf(aa.listaalbum.get(i).getNombre()) == -1) {
                CanCombo.addElement(aa.listaalbum.get(i).getNombre());
            }
        }
        //tabla de musica
        tabla_albumCanciones.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][]{},
                new String[]{
                    "Canciones"
                }
        ) {
            boolean[] canEdit = new boolean[]{
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit[columnIndex];
            }
        });
        DefaultTableModel Albumodelo1 = (DefaultTableModel) tabla_albumCanciones.getModel();

        String album = (String) album_comboBox.getSelectedItem();
        for (int i = 0; i < aa.listaalbum.size(); i++) {
            if (aa.listaalbum.get(i).getNombre().equals(album)) {
                for (int j = 0; j < aa.listaalbum.get(i).canciones.size(); j++) {
                    Albumodelo1.addRow(new Object[]{aa.listaalbum.get(i).canciones.get(j).getNombre()});
                }
            }

        }
    }//GEN-LAST:event_panelMouseClicked

    private void jButton2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseClicked
        Album a = new Album(album_nombre.getText(), album_artista.getText());
        aa.setAlbum(a);
        aa.escribirArchivo();
        JOptionPane.showMessageDialog(this, "Se ha añadido un album");
        album_artista.setText("");
        album_nombre.setText("");
        //tablaAlbumModelo
        tabla_album.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][]{},
                new String[]{
                    "Nombre", "Artista"
                }
        ) {
            boolean[] canEdit = new boolean[]{
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit[columnIndex];
            }
        });
        DefaultTableModel Albumodelo = (DefaultTableModel) tabla_album.getModel();
        for (int i = 0; i < aa.listaalbum.size(); i++) {
            Albumodelo.addRow(new Object[]{aa.listaalbum.get(i).getNombre(), aa.listaalbum.get(i).getArtista()});
        }
        //combobox
        DefaultComboBoxModel albumCombo = (DefaultComboBoxModel) album_comboBox.getModel();
        for (int i = 0; i < aa.listaalbum.size(); i++) {
            if (albumCombo.getIndexOf(aa.listaalbum.get(i).getNombre()) == -1) {
                albumCombo.addElement(aa.listaalbum.get(i).getNombre());
            }
        }
        DefaultComboBoxModel CanCombo = (DefaultComboBoxModel) canciones_comboBox.getModel();
        for (int i = 0; i < aa.listaalbum.size(); i++) {
            if (CanCombo.getIndexOf(aa.listaalbum.get(i).getNombre()) == -1) {
                CanCombo.addElement(aa.listaalbum.get(i).getNombre());
            }
        }
    }//GEN-LAST:event_jButton2MouseClicked

    private void album_comboBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_album_comboBoxItemStateChanged
        tabla_albumCanciones.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][]{},
                new String[]{
                    "Canciones"
                }
        ) {
            boolean[] canEdit = new boolean[]{
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit[columnIndex];
            }
        });
        DefaultTableModel Albumodelo = (DefaultTableModel) tabla_albumCanciones.getModel();

        String album = (String) album_comboBox.getSelectedItem();
        for (int i = 0; i < aa.listaalbum.size(); i++) {
            if (aa.listaalbum.get(i).getNombre().equals(album)) {
                for (int j = 0; j < aa.listaalbum.get(i).canciones.size(); j++) {
                    Albumodelo.addRow(new Object[]{aa.listaalbum.get(i).canciones.get(j).getNombre()});
                }
            }

        }
    }//GEN-LAST:event_album_comboBoxItemStateChanged

    private void cancion_botonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cancion_botonMouseClicked
        //String nombre, String artista, String genero, int duración

        String album = (String) canciones_comboBox.getSelectedItem();

        for (int i = 0; i < aa.listaalbum.size(); i++) {
            if (aa.listaalbum.get(i).getNombre().equals(album)) {
                aa.listaalbum.get(i).canciones.add(new Cancion(cancion_nombre.getText(), cancion_artista.getText(), cancion_genero.getText(), (int) cancion_duracion.getValue()));
                aa.escribirArchivo();
            }
        }

        JOptionPane.showMessageDialog(this, "Se ha agregado");

        cancion_artista.setText("");
        cancion_nombre.setText("");
        cancion_genero.setText("");

    }//GEN-LAST:event_cancion_botonMouseClicked

    private void bt_modificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_modificarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bt_modificarActionPerformed

    private void bt_eliminarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bt_eliminarMouseClicked
        int x = tabla_Usuarios.getSelectedRow();
        int y = 0;
        String userName = (String) tabla_Usuarios.getValueAt(x, y);
        for (int i = 0; i < au.listausuarios.size(); i++) {
            if (au.listausuarios.get(i).getUsername().equals(userName)) {
                au.listausuarios.remove(i);
                au.escribirArchivo();
            }
        }
        tabla_Usuarios.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][]{},
                new String[]{
                    "UserName", "Name"
                }
        ) {
            boolean[] canEdit = new boolean[]{
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit[columnIndex];
            }
        });
        DefaultTableModel tablaUsuarios = (DefaultTableModel) tabla_Usuarios.getModel();
        for (int i = 0; i < au.listausuarios.size(); i++) {
            tablaUsuarios.addRow(new Object[]{au.listausuarios.get(i).getUsername(), au.listausuarios.get(i).getNombre()});
        }
    }//GEN-LAST:event_bt_eliminarMouseClicked

    private void bt_modificarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bt_modificarMouseClicked
        jd_ModificarUsuario.pack();
        jd_ModificarUsuario.setModal(true);
        jd_ModificarUsuario.setLocationRelativeTo(this);
        jd_ModificarUsuario.setVisible(true);
    }//GEN-LAST:event_bt_modificarMouseClicked

    private void jButton3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton3MouseClicked
        Usuario u = new Usuario(crear_usuario1.getText(), crear_edad1.getText(), crear_usuario1.getText(), crear_contraseña1.getText());
        int x = tabla_Usuarios.getSelectedRow();
        int y = 0;

        String userName = (String) tabla_Usuarios.getValueAt(x, y);
        for (int i = 0; i < au.listausuarios.size(); i++) {
            if (au.listausuarios.get(i).getUsername().equals(userName)) {
                au.listausuarios.set(i, u);
                au.escribirArchivo();

            }
        }

        tabla_Usuarios.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][]{},
                new String[]{
                    "UserName", "Name"
                }
        ) {
            boolean[] canEdit = new boolean[]{
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit[columnIndex];
            }
        });
        DefaultTableModel tablaUsuarios = (DefaultTableModel) tabla_Usuarios.getModel();
        for (int i = 0; i < au.listausuarios.size(); i++) {
            tablaUsuarios.addRow(new Object[]{au.listausuarios.get(i).getUsername(), au.listausuarios.get(i).getNombre()});
        }
        JOptionPane.showMessageDialog(this, "Se ha guardado");
    }//GEN-LAST:event_jButton3MouseClicked

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jButton4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton4MouseClicked
        playlist c = new playlist(crearPlaylist_nombre.getText());
        for (int i = 0; i < au.listausuarios.size(); i++) {
            if (au.listausuarios.get(i).getUsername().equals(tf_usuario.getText())) {
                if (au.listausuarios.get(i).getPassword().equals(tf_contraseña.getText())) {
                    au.listausuarios.get(i).playlists.add(c);
                    JOptionPane.showMessageDialog(this, "Se ha agregado la playlist");
                }
            }
        }
        au.escribirArchivo();
        DefaultComboBoxModel model = (DefaultComboBoxModel) Explorar_playlist.getModel();
        for (int i = 0; i < au.listausuarios.size(); i++) {
            if (au.listausuarios.get(i).getUsername().equals(tf_usuario.getText())) {
                if (au.listausuarios.get(i).getPassword().equals(tf_contraseña.getText())) {
                    for (int j = 0; j < au.listausuarios.get(i).playlists.size(); j++) {
                        if (model.getIndexOf(au.listausuarios.get(i).playlists.get(j).getNombre()) == -1) {
                            model.addElement(au.listausuarios.get(i).playlists.get(j).getNombre());
                        }
                    }

                }
            }
        }
    }//GEN-LAST:event_jButton4MouseClicked

    private void album_eliminarAlbumMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_album_eliminarAlbumMouseClicked
        String album = (String) album_comboBox.getSelectedItem();
        ArrayList borrar = new ArrayList();
        for (int i = 0; i < aa.listaalbum.size(); i++) {
            if (aa.listaalbum.get(i).getNombre().equals(album)) {
                for (int j = 0; j < aa.listaalbum.get(i).canciones.size(); j++) {
                    borrar.add(aa.listaalbum.get(i).getCanciones().get(j).getNombre());
                }
            }
        }
        for (int i = 0; i < au.listausuarios.size(); i++) {
            for (int j = 0; j < au.listausuarios.get(i).playlists.size(); j++) {
                for (int k = 0; k < borrar.size(); k++) {
                    if (borrar.get(k).equals(au.listausuarios.get(i).playlists.get(j).getNombre())) {
                        au.listausuarios.get(i).playlists.remove(j);
                    }
                }
            }
        }
        for (int i = 0; i < aa.listaalbum.size(); i++) {
            if (aa.listaalbum.get(i).getNombre().equals(album)) {
                aa.listaalbum.remove(i);
            }
        }
        borrar.removeAll(borrar);
    }//GEN-LAST:event_album_eliminarAlbumMouseClicked

    private void album_eliminarAlbumMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_album_eliminarAlbumMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_album_eliminarAlbumMouseEntered

    private void explorar_comboAlbumItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_explorar_comboAlbumItemStateChanged

        explorar_tablaCancion.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][]{},
                new String[]{
                    "Nombre", "Artista"
                }
        ) {
            boolean[] canEdit = new boolean[]{
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit[columnIndex];
            }
        });
        String nombre = (String) explorar_comboAlbum.getSelectedItem();
        DefaultTableModel model = (DefaultTableModel) explorar_tablaCancion.getModel();
        for (int i = 0; i < aa.listaalbum.size(); i++) {
            if (aa.listaalbum.get(i).getNombre().equals(nombre)) {
                for (int j = 0; j < aa.listaalbum.get(i).canciones.size(); j++) {
                    model.addRow(new Object[]{aa.listaalbum.get(i).canciones.get(j).nombre, aa.listaalbum.get(i).canciones.get(j).getArtista()});
                }
            }
        }
        //tabla

    }//GEN-LAST:event_explorar_comboAlbumItemStateChanged

    private void jTabbedPane1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabbedPane1MouseClicked
        for (int i = 0; i < au.listausuarios.size(); i++) {
            if (au.listausuarios.get(i).getUsername().equals(tf_usuario.getText())) {
                if (au.listausuarios.get(i).getPassword().equals(tf_contraseña.getText())) {
                    //
                    if (au.listausuarios.get(i).playlists.size() > 0) {
                        jButton5.setEnabled(true);
                    } else {
                        jButton5.setEnabled(false);
                    }

                }
            }
        }
        DefaultComboBoxModel model = (DefaultComboBoxModel) Explorar_playlist.getModel();
        for (int i = 0; i < au.listausuarios.size(); i++) {
            if (au.listausuarios.get(i).getUsername().equals(tf_usuario.getText())) {
                if (au.listausuarios.get(i).getPassword().equals(tf_contraseña.getText())) {
                    for (int j = 0; j < au.listausuarios.get(i).playlists.size(); j++) {
                        if (model.getIndexOf(au.listausuarios.get(i).playlists.get(j).getNombre()) == -1) {
                            model.addElement(au.listausuarios.get(i).playlists.get(j).getNombre());
                        }
                    }

                }
            }
        }
        DefaultComboBoxModel model3 = (DefaultComboBoxModel) fav_combbox.getModel();
        for (int i = 0; i < au.listausuarios.size(); i++) {
            for (int j = 0; j < au.listausuarios.get(i).favoritos.size(); j++) {
                if (model3.getIndexOf(au.listausuarios.get(i).favoritos.get(j).getNombre()) == -1) {
                    model3.addElement(au.listausuarios.get(i).favoritos.get(j).getNombre());
                }
            }
        }
    }//GEN-LAST:event_jTabbedPane1MouseClicked

    private void jButton5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton5MouseClicked
        int x = explorar_tablaCancion.getSelectedRow();
        int y = 0;
        String NombreCancion = (String) explorar_tablaCancion.getValueAt(x, y);
        String Playlist = (String) Explorar_playlist.getSelectedItem();
        Cancion c = null;
        for (int i = 0; i < aa.listaalbum.size(); i++) {
            for (int j = 0; j < aa.listaalbum.get(i).canciones.size(); j++) {
                if (aa.listaalbum.get(i).canciones.get(j).getNombre().equals(NombreCancion)) {
                    c = aa.listaalbum.get(i).canciones.get(j);
                }
            }
        }

        for (int i = 0; i < au.listausuarios.size(); i++) {
            if (au.listausuarios.get(i).getUsername().equals(tf_usuario.getText())) {
                for (int j = 0; j < au.listausuarios.get(i).playlists.size(); j++) {
                    if (au.listausuarios.get(i).playlists.get(j).getNombre().equals(Playlist)) {
                        au.listausuarios.get(i).playlists.get(j).listaCancion.add(c);
                        JOptionPane.showMessageDialog(this, "Se ha añadido");
                    }
                }
            }
        }
        /////TREE

        DefaultTreeModel modeloArbol = (DefaultTreeModel) VerPlayList_Tree.getModel();
        DefaultMutableTreeNode raiz = (DefaultMutableTreeNode) modeloArbol.getRoot();
       

        String nombre = "", nombreCancion = "";
        DefaultMutableTreeNode p = null;
        DefaultMutableTreeNode n = null;
        for (int i = 0; i < au.listausuarios.size(); i++) {
            if (au.listausuarios.get(i).getUsername().equals(tf_usuario.getText())) {
                for (int j = 0; j < au.listausuarios.get(i).playlists.size(); j++) {
                    n = new DefaultMutableTreeNode(au.listausuarios.get(i).playlists.get(j).getNombre());
                    for (int k = 0; k < au.listausuarios.get(i).playlists.get(j).listaCancion.size(); k++) {
                        p = new DefaultMutableTreeNode(au.listausuarios.get(i).playlists.get(j).listaCancion.get(k).getNombre());
                        n.add(p);
                    }

                }
                raiz.add(n);
            }

        }
        //ver si ya existe la nacionalidad
        /* int centinela = -1;
        for (int i = 0; i < raiz.getChildCount(); i++) {
            if (raiz.getChildAt(i).toString().equals(nombre)) {
                //si ya existe le agrega la persona
                Persona p = new Persona(nombre, edad, nacionalidad);

                ((DefaultMutableTreeNode) raiz.getChildAt(i)).add((MutableTreeNode) p);
                centinela = 1;
            }//fin if
        }//fin for
        if (centinela == -1) {
            DefaultMutableTreeNode n = new DefaultMutableTreeNode(nacionalidad);
            DefaultMutableTreeNode p = new DefaultMutableTreeNode(new Persona(nombre, edad, nacionalidad));
            n.add(p);
            raiz.add(n);
        }//fin if
         */
        modeloArbol.reload();


    }//GEN-LAST:event_jButton5MouseClicked

    private void Favoritos_comboBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_Favoritos_comboBoxItemStateChanged
        explorar_tablaCancion1.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][]{},
                new String[]{
                    "Nombre", "Artista"
                }
        ) {
            boolean[] canEdit = new boolean[]{
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit[columnIndex];
            }
        });
        String nombre1 = (String) Favoritos_comboBox.getSelectedItem();
        DefaultTableModel model1 = (DefaultTableModel) explorar_tablaCancion1.getModel();
        for (int i = 0; i < aa.listaalbum.size(); i++) {
            if (aa.listaalbum.get(i).getNombre().equals(nombre1)) {
                for (int j = 0; j < aa.listaalbum.get(i).canciones.size(); j++) {
                    model1.addRow(new Object[]{aa.listaalbum.get(i).canciones.get(j).nombre, aa.listaalbum.get(i).canciones.get(j).getArtista()});
                }
            }
        }
    }//GEN-LAST:event_Favoritos_comboBoxItemStateChanged

    private void jButton6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton6MouseClicked
        int x = explorar_tablaCancion1.getSelectedRow();
        int y = 0;
        String NombreCancion = (String) explorar_tablaCancion1.getValueAt(x, y);
        Cancion c = null;
        for (int i = 0; i < aa.listaalbum.size(); i++) {
            for (int j = 0; j < aa.listaalbum.get(i).canciones.size(); j++) {
                if (aa.listaalbum.get(i).canciones.get(j).getNombre().equals(NombreCancion)) {
                    c = aa.listaalbum.get(i).canciones.get(j);
                }
            }
        }
        for (int i = 0; i < au.listausuarios.size(); i++) {
            if (au.listausuarios.get(i).getUsername().equals(tf_usuario.getText())) {
                au.listausuarios.get(i).favoritos.add(c);
            }
        }
        au.escribirArchivo();
        DefaultComboBoxModel model = (DefaultComboBoxModel) fav_combbox.getModel();
        for (int i = 0; i < au.listausuarios.size(); i++) {
            for (int j = 0; j < au.listausuarios.get(i).favoritos.size(); j++) {
                if (model.getIndexOf(au.listausuarios.get(i).favoritos.get(j).getNombre()) == -1) {
                    model.addElement(au.listausuarios.get(i).favoritos.get(j).getNombre());
                }
            }
        }
    }//GEN-LAST:event_jButton6MouseClicked

    private void jButton7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton7MouseClicked
        int cuanto = 0;
        for (int i = 0; i < au.listausuarios.size(); i++) {
            for (int j = 0; j < au.listausuarios.get(i).favoritos.size(); j++) {
                if (au.listausuarios.get(i).favoritos.get(j).getNombre().equals(fav_combbox.getSelectedItem())) {
                    cuanto = au.listausuarios.get(i).favoritos.get(j).getDuración();
                }
            }
        }
        Hilo hp = new Hilo(segundos, minuto, cuanto);
        Thread p1 = new Thread(hp);
        p1.start();
    }//GEN-LAST:event_jButton7MouseClicked

    private void EliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EliminarActionPerformed

    }//GEN-LAST:event_EliminarActionPerformed

    private void VerPlayList_TreeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_VerPlayList_TreeMouseClicked
        if (evt.isMetaDown()) {
            row = VerPlayList_Tree.getClosestRowForLocation(evt.getX(), evt.getY());
            VerPlayList_Tree.setSelectionRow(row);
            popup_playlist.show(evt.getComponent(), evt.getX(), evt.getY());
        }
    }//GEN-LAST:event_VerPlayList_TreeMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */

        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {

                new Main().setVisible(true);

            }
        });

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem Eliminar;
    private javax.swing.JComboBox<String> Explorar_playlist;
    private javax.swing.JComboBox<String> Favoritos_comboBox;
    private javax.swing.JTree VerPlayList_Tree;
    private javax.swing.JTextField album_artista;
    private javax.swing.JComboBox<String> album_comboBox;
    private javax.swing.JButton album_eliminarAlbum;
    private javax.swing.JTextField album_nombre;
    private javax.swing.JButton bt_cargarUsuarios;
    private javax.swing.JButton bt_crearUsuario;
    private javax.swing.JButton bt_eliminar;
    private javax.swing.JButton bt_entrarLogin;
    private javax.swing.JButton bt_modificar;
    private javax.swing.JTextField cancion_artista;
    private javax.swing.JButton cancion_boton;
    private javax.swing.JSpinner cancion_duracion;
    private javax.swing.JTextField cancion_genero;
    private javax.swing.JTextField cancion_nombre;
    private javax.swing.JComboBox<String> canciones_comboBox;
    private javax.swing.JTextField crearPlaylist_nombre;
    private javax.swing.JTextField crear_contraseña;
    private javax.swing.JTextField crear_contraseña1;
    private javax.swing.JTextField crear_edad;
    private javax.swing.JTextField crear_edad1;
    private javax.swing.JTextField crear_nombre;
    private javax.swing.JTextField crear_nombre1;
    private javax.swing.JTextField crear_usuario;
    private javax.swing.JTextField crear_usuario1;
    private javax.swing.JComboBox<String> explorar_comboAlbum;
    private javax.swing.JTable explorar_tablaCancion;
    private javax.swing.JTable explorar_tablaCancion1;
    private javax.swing.JComboBox<String> fav_combbox;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JDialog jd_CrearUsuario;
    private javax.swing.JDialog jd_ModificarUsuario;
    private javax.swing.JDialog jd_login;
    private javax.swing.JLabel minuto;
    private javax.swing.JTabbedPane panel;
    private javax.swing.JPanel panel_albums;
    private javax.swing.JPanel panel_canciones;
    private javax.swing.JPanel panel_cargarUsuarios;
    private javax.swing.JPanel panel_guardarUsuario;
    private javax.swing.JPanel panel_login;
    private javax.swing.JPanel panel_usuarios;
    private javax.swing.JPopupMenu popup_playlist;
    private javax.swing.JLabel segundos;
    private javax.swing.JTable tabla_Usuarios;
    private javax.swing.JTable tabla_album;
    private javax.swing.JTable tabla_albumCanciones;
    private javax.swing.JTable tabla_cargarUsuarios;
    private javax.swing.JTextField tf_contraseña;
    private javax.swing.JTextField tf_usuario;
    // End of variables declaration//GEN-END:variables
administrarUsuario au = new administrarUsuario("./usuarios.cbm");
    administrarAlbum aa = new administrarAlbum("./album.cbm");
    int row;

}
